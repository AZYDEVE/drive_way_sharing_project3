{"version":3,"sources":["components/loginTokenAndSignOff.js","utility/fireDB/firebaseConnect.js","components/Navbar/image/logo.png","components/Navbar/Navbar.js","createPostPage/CreatePost.js","components/Card/Card.js","searchPage/SearchPage.js","components/Calendar.js","homePage/Home.js","makeAppointmentPage/MakeAppointment.js","loginAndLogOutPage/SignUp.js","loginAndLogOutPage/Login.js","components/Card/CardForAppointment.js","AppointmentPage/MyAppointment.js","App.js","index.js"],"names":["getLogin","userObj","a","fetch","method","headers","body","JSON","stringify","checkCurrentLogin","emailObj","res","json","token","checkIfUserPasswordMatches","deleteLoginToken","query","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","storage","Navbar","props","class","className","src","logo","alt","height","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","style","homeActive","MyAppointment","createPostActive","searchPostActive","onClick","logoutFunction","CreatePost","history","useHistory","useState","userInfo","setUserInfo","console","log","email","street","city","state","zip","parkingFee","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","MondayStartTime","TuesdayStartTime","WednesdayStartTime","ThursdayStartTime","FridayStartTime","SaturdayStartTime","SundayStartTime","MondayEndTime","TuesdayEndTime","WednesdayEndTime","ThursdayEndTime","FridayEndTime","SaturdayEndTime","SundayEndTime","userId","picture","formValue","setFormValue","useEffect","data","localStorage","getItem","check","loginToken","result","push","handleLogOut","removeItem","handleChanges","event","target","name","value","handleChangeCheckBox","checked","imagePickedFile","setImgePickedFile","temImageFileAfterPicked","setTemImageFileAfterPicked","handleFile","persist","picUrl","files","URL","createObjectURL","uploadFirebaseAndGetUrl","unqiRef","Date","getTime","ref","put","on","snapshot","error","getDownloadURL","urlss","requestOptions","then","response","Swal","fire","icon","text","catch","createPost","fileInput","useRef","borderBottom","Container","Form","Group","controlId","Label","Control","placeholder","onChange","Row","as","Col","defaultValue","map","st","start","end","step","backgroundColor","disabled","time","feedbackTooltip","current","click","CardView","border","borderRadius","function","post","buttonName","SearchPage","posts","setPost","dataStatus","setDataStatus","sendPostData","setSendPostData","zipinfo","setZipinfo","getInfo","searchByZipCode","goToPost","setItem","cardViewStyle","margin","overflow","t","Card","_id","Calendar","busHr","driveWayPost","Object","entries","key","daysOfWeek","startTime","moment","startOf","seconds","format","endTime","checkBusinessHr","selectedPost","plugins","dayGridPlugin","timeGridPlugin","initialView","defaultDate","selectable","displayEventTime","events","appointment","title","renter","getEvent","eventColor","defaultView","header","left","center","right","eventTimeFormat","hour","minute","meridiem","businessHours","Home","setUserinfo","userActivePost","setUserActivePost","setSelectedPost","setAppointment","path","getAppointment","getSelectedPost","marginBottom","role","aria-level","width","MakeAppointmentTesting","setDrivewayPost","setStartTime","setEndTime","datePicked","setDatePicked","existingAppointment","setExistingAppointment","handleSchduleBtn","schedule","owner","year","month","date","Math","floor","oldArray","confirmSchedule","lastItem","length","initialSetup","postRent","parse","currentPost","selectedDays","onDayClick","e","selectedDate","SignUp","password","signUpInfo","setSignUpInfo","handleSignUpInput","str","toLowerCase","checkUserInDb","createUserInTheDataBase","swal","button","for","marginTop","padding","SignIn","signInInfo","setSignInInfo","handleSignIn","handleSignInInput","myAppointmentCardView","toLocaleString","myAppointment","setmyAppointment","getPost","getMyAppointment","arr","Promise","all","currentAppointment","img","ClassName","App","resolve","reject","component","MakeAppointment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c65d7c3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const getLogin = async (userObj)=>{\r\n  const res = await fetch(\"/get_token\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(userObj),\r\n    });\r\n\r\n}\r\n\r\n\r\nexport const checkCurrentLogin= async (emailObj)=>{\r\n  const res = await fetch(\"/check_current_login\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(emailObj),\r\n    });\r\n\r\n  const token =await res.json();\r\n\r\n  return token;\r\n\r\n}\r\n\r\nexport const checkIfUserPasswordMatches= async (userObj)=>{\r\n\r\n   const res = await fetch(\"/check_email_and_password\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(userObj),\r\n    });\r\n\r\n  const token =await res.json();\r\n  \r\n  return token;\r\n\r\n\r\n}\r\n\r\nexport const deleteLoginToken= async (query)=>{\r\n\r\n      const res = await fetch(\"/delete_login_token\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(query),\r\n    });\r\n   \r\n   \r\n\r\n}","import firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/analytics\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nconst storage = firebase.storage();\r\n\r\nexport { storage, firebase as default };\r\n","export default __webpack_public_path__ + \"static/media/logo.3f0fe25e.png\";","import React from \"react\";\r\nimport logo from \"./image/logo.png\"\r\nimport \"./navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Navbar(props) {\r\n\r\n  return (\r\n    <nav class=\"navbar navbar-expand-lg  home-nav\">\r\n      <img className=\"home-logo\" src={logo} alt=\"logo\" height=\"120\" />\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"home-nav-link\">\r\n          <li className=\"nav-item active\" >\r\n            <Link className=\"nav-link-home\" to=\"/home\" style ={props.homeActive}>\r\n              HOME <span class=\"sr-only\">(current)</span>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link  class=\"nav-link-MyAppointment\" to=\"/my_appointment\" style ={props.MyAppointment}>\r\n              MY APPOINTMENTS\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link  class=\"nav-link-createpost\" to=\"/createpost\" style ={props.createPostActive}>\r\n              CREATE POST\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link  className=\"nav-link-search\" to=\"/searchpage\" style ={props.searchPostActive}>\r\n              SEARCH POST\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n          <Link   to=\"/\">\r\n            <button className=\"homeLogOut\" onClick={props.logoutFunction}>\r\n              Log Out\r\n            </button>\r\n          </Link>\r\n             </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { Container, Form, Col, option } from \"react-bootstrap\";\r\nimport TimePicker from \"react-bootstrap-time-picker\";\r\nimport Swal from 'sweetalert2'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as loginToken from \"../components/loginTokenAndSignOff\";\r\nimport firebase from \"../utility/fireDB/firebaseConnect\";\r\nimport \"./createPost.css\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\n\r\nfunction CreatePost() {\r\n\r\n\r\n  const storage = firebase.storage();\r\n  const history = useHistory();\r\n\r\n  const [userInfo, setUserInfo] = useState();\r\n  console.log(userInfo)\r\n  const [formValue, setFormValue] = useState({\r\n    email: \"\",\r\n    street: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    zip: \"\",\r\n    parkingFee: \"\",\r\n    Monday: false,\r\n    Tuesday: false,\r\n    Wednesday: false,\r\n    Thursday: false,\r\n    Friday: false,\r\n    Saturday: false,\r\n    Sunday: false,\r\n    MondayStartTime: \"\",\r\n    TuesdayStartTime: \"\",\r\n    WednesdayStartTime: \"\",\r\n    ThursdayStartTime: \"\",\r\n    FridayStartTime: \"\",\r\n    SaturdayStartTime: \"\",\r\n    SundayStartTime: \"\",\r\n    MondayEndTime: \"\",\r\n    TuesdayEndTime: \"\",\r\n    WednesdayEndTime: \"\",\r\n    ThursdayEndTime: \"\",\r\n    FridayEndTime: \"\",\r\n    SaturdayEndTime: \"\",\r\n    SundayEndTime: \"\",\r\n    userId: \"\",\r\n    picture: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(\"current-user\");\r\n    if (data) {\r\n      setUserInfo(data);\r\n      setFormValue({\r\n        ...formValue,\r\n        email: data,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  //check database if the user is in the currently login collection\r\n  useEffect(() => {\r\n    check();\r\n  }, []);\r\n\r\n  const check = async () => {\r\n    const data = localStorage.getItem(\"current-user\");\r\n   \r\n\r\n    if (data) {\r\n      const result = await loginToken.checkCurrentLogin({ email: data });\r\n    \r\n      if (result.result === false) {\r\n        history.push(\"/signin\");\r\n      }\r\n    } else {\r\n      history.push(\"/signin\");\r\n    }\r\n  };\r\n\r\n  const handleLogOut = async () => {\r\n   \r\n    await loginToken.deleteLoginToken({ email: userInfo });\r\n    await localStorage.removeItem(\"current-user\");\r\n  };\r\n\r\n\r\n\r\n  const handleChanges = (event) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const stateAbbreviations = [\r\n    \"Alabama\",\r\n    \"Alaska\",\r\n    \"American Samoa\",\r\n    \"Arizona\",\r\n    \"Arkansas\",\r\n    \"California\",\r\n    \"Colorado\",\r\n    \"Connecticut\",\r\n    \"Delaware\",\r\n    \"District of Columbia\",\r\n    \"Florida\",\r\n    \"Georgia\",\r\n    \"Guam\",\r\n    \"Hawaii\",\r\n    \"Idaho\",\r\n    \"Illinois\",\r\n    \"Indiana\",\r\n    \"Iowa\",\r\n    \"Kansas\",\r\n    \"Kentucky\",\r\n    \"Louisiana\",\r\n    \"Maine\",\r\n    \"Marshall Islands\",\r\n    \"Maryland\",\r\n    \"Massachusetts\",\r\n    \"Michigan\",\r\n    \"Minnesota\",\r\n    \"Mississippi\",\r\n    \"Missouri\",\r\n    \"Montana\",\r\n    \"Nebraska\",\r\n    \"Nevada\",\r\n    \"New Hampshire\",\r\n    \"New Jersey\",\r\n    \"New Mexico\",\r\n    \"New York\",\r\n    \"North Carolina\",\r\n    \"North Dakota\",\r\n    \"Northern Mariana Islands\",\r\n    \"Ohio\",\r\n    \"Oklahoma\",\r\n    \"Oregon\",\r\n    \"Palau\",\r\n    \"Pennsylvania\",\r\n    \"Puerto Rico\",\r\n    \"Rhode Island\",\r\n    \"South Carolina\",\r\n    \"South Dakota\",\r\n    \"Tennessee\",\r\n    \"Texas\",\r\n    \"Utah\",\r\n    \"Vermont\",\r\n    \"Virgin Island\",\r\n    \"Virginia\",\r\n    \"Washington\",\r\n    \"West Virginia\",\r\n    \"Wisconsin\",\r\n    \"Wyoming\",\r\n  ];\r\n\r\n  const handleChangeCheckBox = (event) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      [event.target.id]: event.target.checked,\r\n    });\r\n\r\n   \r\n  };\r\n\r\n  const handleStartTimeMonday = (time) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      MondayStartTime: time,\r\n    });\r\n  };\r\n\r\n  const handleStartTimeTuesday = (time) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      TuesdayStartTime: time,\r\n    });\r\n  };\r\n  const handleStartTimeWednesday = (time) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      WednesdayStartTime: time,\r\n    });\r\n  };\r\n  const handleStartTimeThrusday = (time) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      ThursdayStartTime: time,\r\n    });\r\n  };\r\n  const handleStartTimeFriday = (time) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      FridayStartTime: time,\r\n    });\r\n  };\r\n  const handleStartTimeSaturday = (time) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      SaturdayStartTime: time,\r\n    });\r\n  };\r\n  const handleStartTimeSunday = (time) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      SundayStartTime: time,\r\n    });\r\n  };\r\n\r\n  const handleEndTimeMonday = (time) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      MondayEndTime: time,\r\n    });\r\n  };\r\n\r\n  const handleEndTimeTuesday = (time) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      TuesdayEndTime: time,\r\n    });\r\n  };\r\n\r\n  const handleEndTimeWednesday = (time) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      WednesdayEndTime: time,\r\n    });\r\n  };\r\n\r\n  const handleEndTimeThursday = (time) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      ThursdayEndTime: time,\r\n    });\r\n  };\r\n\r\n  const handleEndTimeFriday = (time) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      FridayEndTime: time,\r\n    });\r\n  };\r\n\r\n  const handleEndTimeSaturday = (time) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      SaturdayEndTime: time,\r\n    });\r\n  };\r\n\r\n  const handleEndTimeSunday = (time) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      SundayEndTime: time,\r\n    });\r\n  };\r\n\r\n  const handlePictureUrl = async (url) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      picture: url,\r\n    });\r\n  };\r\n\r\n  // pick the image , display the image, and than upload to firebase\r\n  const [imagePickedFile, setImgePickedFile] = useState(null);\r\n  const [temImageFileAfterPicked, setTemImageFileAfterPicked] = useState(null);\r\n\r\n  const handleFile = async (event) => {\r\n  \r\n    event.persist();\r\n    const picUrl = event.target.files[0];\r\n    setImgePickedFile(picUrl);\r\n\r\n    if (picUrl) {\r\n      await setTemImageFileAfterPicked(URL.createObjectURL(picUrl));\r\n    }\r\n  };\r\n\r\n  const uploadFirebaseAndGetUrl = async () => {\r\n    const unqiRef = new Date().getTime();\r\n   \r\n\r\n    if (temImageFileAfterPicked) {\r\n      storage\r\n        .ref(`picture/${unqiRef}`)\r\n        .put(imagePickedFile)\r\n        .on(\r\n          \"state_changed\",\r\n          (snapshot) => {},\r\n          (error) => {\r\n          \r\n          },\r\n          async () => {\r\n            const urlss = await storage\r\n              .ref(`picture/${unqiRef}`)\r\n              .getDownloadURL();\r\n           \r\n\r\n            formValue.picture = urlss;\r\n            // update picture url to form\r\n\r\n          \r\n\r\n            const requestOptions = {\r\n              method: \"POST\",\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              body: JSON.stringify(formValue),\r\n            };\r\n            await fetch(\"/insert_newpost\", requestOptions)\r\n              .then(async (response) => {\r\n                Swal.fire({\r\n                  icon:\"success\",\r\n                  text:\"You post is successfully published\"\r\n                }).then(history.push(history.push(\"/home\")));\r\n                const data = await response;\r\n              \r\n\r\n                \r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n              });\r\n          }\r\n        );\r\n    }\r\n  };\r\n\r\n  const createPost = async () => {\r\n    const picUrl = await uploadFirebaseAndGetUrl();\r\n  };\r\n\r\n  const fileInput = useRef(\"\")\r\n  const fileUploadTrigerInput = ()=>{\r\n    fileInput.current.click()\r\n  }\r\n\r\n  return (\r\n    <div className=\"createpost-body\">\r\n      <Navbar createPostActive={{ borderBottom: \"4px solid black\" }} \r\n       logoutFunction={handleLogOut}/>\r\n      <Container>\r\n        <Form>\r\n          <Form.Group controlId=\"formGridAddress1\">\r\n            <Form.Label>Street</Form.Label>\r\n            <Form.Control\r\n              placeholder=\"1234 Main St\"\r\n              name=\"street\"\r\n              value={formValue.street}\r\n              onChange={handleChanges}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Row>\r\n            <Form.Group\r\n              className=\"col-sm-3 city-title-input\"\r\n              as={Col}\r\n              controlId=\"formGridCity\"\r\n            >\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"New York\"\r\n                name=\"city\"\r\n                value={formValue.city}\r\n                onChange={handleChanges}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              className=\"col-sm-3 state-title-input\"\r\n              as={Col}\r\n              controlId=\"formGridState\"\r\n            >\r\n              <Form.Label>State</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                defaultValue=\"Choose...\"\r\n                name=\"state\"\r\n                value={formValue.state}\r\n                onChange={handleChanges}\r\n              >\r\n                {stateAbbreviations.map((st) => (\r\n                  <option>{st}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              className=\"col-sm-2 zip-title-input\"\r\n              controlId=\"formGridZip\"\r\n            >\r\n              <Form.Label>Zip</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                name=\"zip\"\r\n                value={formValue.zip}\r\n                onChange={handleChanges}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              className=\"col-sm-2 fee-title-input\"\r\n              controlId=\"formGridAddress1\"\r\n            >\r\n              <Form.Label>Parking Fee</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"$\"\r\n                name=\"parkingFee\"\r\n                value={formValue.parkingFee}\r\n                onChange={handleChanges}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n        </Form>\r\n      </Container>\r\n\r\n      <div className=\" date-time-picture-container\">\r\n        <h5 className=\"date-time-title\">\r\n          Set Time For Renting Out Your Drive Way\r\n        </h5>\r\n\r\n        <input\r\n          aria-label=\"monday-checkbox\"\r\n          className=\"mon-check\"\r\n          type=\"checkbox\"\r\n          id=\"Monday\"\r\n          onChange={handleChangeCheckBox}\r\n        />\r\n        <label className=\"mon-lable\">Monday</label>\r\n\r\n        <h6 className=\"start-title\">Start </h6>\r\n        <h6 className=\"end-title\">End</h6>\r\n\r\n        <TimePicker\r\n         aria-label=\"monday-time-picker-start\"\r\n          className=\"mon-start\"\r\n          start=\"0\"\r\n          end=\"24\"\r\n          name=\"StartTime\"\r\n          step={30}\r\n          style ={formValue.Monday ? {backgroundColor:\"#D0F0C0\"}:{}}\r\n          disabled={formValue.Monday ? false : true}\r\n          value={formValue.MondayStartTime}\r\n          onChange={handleStartTimeMonday}\r\n        />\r\n\r\n        <TimePicker\r\n         aria-label=\"monday-time-picker-end\"\r\n          className=\" mon-end\"\r\n          start=\"0\"\r\n          end=\"24\"\r\n          step={30}\r\n          name=\"EndTime\"\r\n          style ={formValue.Monday ? {backgroundColor:\"#D0F0C0\"}:{}}\r\n          disabled={formValue.Monday ? false : true}\r\n          value={formValue.MondayEndTime}\r\n          onChange={handleEndTimeMonday}\r\n        />\r\n\r\n        <input\r\n          aria-label=\"tuesday-checkbox\"\r\n          className=\"tue-checkbox\"\r\n          type=\"checkbox\"\r\n          id=\"Tuesday\"\r\n          onChange={handleChangeCheckBox}\r\n        />\r\n        <label className=\"tue-label\">Tuesday</label>\r\n\r\n        <TimePicker\r\n         aria-label=\"tuesday-time-picker-start\"\r\n          className=\"tue-start\"\r\n          start=\"0\"\r\n          end=\"24\"\r\n          name=\"StartTime\"\r\n          step={30}\r\n          style ={formValue.Tuesday ? {backgroundColor:\"#D0F0C0\"}:{}}\r\n          disabled={formValue.Tuesday ? false : true}\r\n          value={formValue.TuesdayStartTime}\r\n          onChange={handleStartTimeTuesday}\r\n        />\r\n\r\n        <TimePicker\r\n         aria-label=\"tuesday-time-picker-end\"\r\n          className=\"tue-end\"\r\n          start=\"0\"\r\n          end=\"24\"\r\n          step={30}\r\n          name=\"EndTime\"\r\n           style ={formValue.Tuesday ? {backgroundColor:\"#D0F0C0\"}:{}}\r\n          disabled={formValue.Tuesday ? false : true}\r\n          value={formValue.TuesdayEndTime}\r\n          onChange={handleEndTimeTuesday}\r\n        />\r\n\r\n        <input\r\n        aria-label=\"wednesday-checkbox\"\r\n          className=\"wed-checkbox\"\r\n          type=\"checkbox\"\r\n          id=\"Wednesday\"\r\n          onChange={handleChangeCheckBox}\r\n        />\r\n        <label className=\"wed-label\">Wednesday</label>\r\n\r\n        <TimePicker\r\n           aria-label=\"wednesday-time-picker-start\"\r\n          className=\"wed-start\"\r\n          start=\"0\"\r\n          end=\"24\"\r\n          name=\"StartTime\"\r\n          step={30}\r\n           style ={formValue.Wednesday ? {backgroundColor:\"#D0F0C0\"}:{}}\r\n          disabled={formValue.Wednesday ? false : true}\r\n          value={formValue.WednesdayStartTime}\r\n          onChange={handleStartTimeWednesday}\r\n        />\r\n\r\n        <TimePicker\r\n         aria-label=\"wednesday-time-picker-end\"\r\n          className=\"wed-end\"\r\n          start=\"0\"\r\n          end=\"24\"\r\n          step={30}\r\n          name=\"EndTime\"\r\n          style ={formValue.Wednesday ? {backgroundColor:\"#D0F0C0\"}:{}}\r\n          disabled={formValue.Wednesday ? false : true}\r\n          value={formValue.WednesdayEndTime}\r\n          onChange={handleEndTimeWednesday}\r\n        />\r\n\r\n        <input\r\n        aria-label=\"thursday-checkbox\"\r\n          className=\" thur-checkbox\"\r\n          type=\"checkbox\"\r\n          id=\"Thursday\"\r\n          onChange={handleChangeCheckBox}\r\n        />\r\n        <label className=\"thur-label\">Thursday</label>\r\n\r\n        <TimePicker\r\n         aria-label=\"thursday-time-picker-start\"\r\n          className=\"thur-start\"\r\n          start=\"0\"\r\n          end=\"24\"\r\n          name=\"StartTime\"\r\n          step={30}\r\n          style ={formValue.Thursday ? {backgroundColor:\"#D0F0C0\"}:{}}\r\n          disabled={formValue.Thursday ? false : true}\r\n          value={formValue.ThursdayStartTime}\r\n          onChange={handleStartTimeThrusday}\r\n        />\r\n\r\n        <TimePicker\r\n         aria-label=\"thursday-time-picker-end\"\r\n          className=\"thur-end\"\r\n          start=\"0\"\r\n          end=\"24\"\r\n          step={30}\r\n          name=\"EndTime\"\r\n           style ={formValue.Thursday ? {backgroundColor:\"#D0F0C0\"}:{}}\r\n          disabled={formValue.Thursday ? false : true}\r\n          value={formValue.ThursdayEndTime}\r\n          onChange={handleEndTimeThursday}\r\n        />\r\n\r\n        <input\r\n        aria-label=\"friday-checkbox\"\r\n          className=\"fri-checkbox\"\r\n          type=\"checkbox\"\r\n          id=\"Friday\"\r\n          onChange={handleChangeCheckBox}\r\n        />\r\n        <label className=\"fri-label\">Friday</label>\r\n\r\n        <TimePicker\r\n         aria-label=\"friday-time-picker-start\"\r\n          className=\"fri-start\"\r\n          start=\"0\"\r\n          end=\"24\"\r\n          name=\"StartTime\"\r\n          step={30}\r\n           style ={formValue.Friday ? {backgroundColor:\"#D0F0C0\"}:{}}\r\n          disabled={formValue.Friday ? false : true}\r\n          value={formValue.FridayStartTime}\r\n          onChange={handleStartTimeFriday}\r\n        />\r\n\r\n        <TimePicker\r\n           aria-label=\"friday-time-picker-end\"\r\n          className=\"fri-end\"\r\n          start=\"0\"\r\n          end=\"24\"\r\n          step={30}\r\n          name=\"EndTime\"\r\n           style ={formValue.Friday ? {backgroundColor:\"#D0F0C0\"}:{}}\r\n          disabled={formValue.Friday ? false : true}\r\n          value={formValue.FridayEndTime}\r\n          onChange={handleEndTimeFriday}\r\n        />\r\n\r\n        <input\r\n        aria-label=\"saturday-checkbox\"\r\n          className=\" sat-checkbox\"\r\n          type=\"checkbox\"\r\n          id=\"Saturday\"\r\n          onChange={handleChangeCheckBox}\r\n        />\r\n        <label className=\"sat-label\">Saturday</label>\r\n\r\n        <TimePicker\r\n         aria-label=\"saturday-time-picker-start\"\r\n          className=\"sat-start\"\r\n          start=\"0\"\r\n          end=\"24\"\r\n          name=\"StartTime\"\r\n          step={30}\r\n           style ={formValue.Saturday? {backgroundColor:\"#D0F0C0\"}:{}}\r\n          disabled={formValue.Saturday ? false : true}\r\n          value={formValue.SaturdayStartTime}\r\n          onChange={handleStartTimeSaturday}\r\n        />\r\n\r\n        <TimePicker\r\n          aria-label=\"saturday-time-picker-end\"\r\n          className=\"sat-end\"\r\n          start=\"0\"\r\n          end=\"24\"\r\n          step={30}\r\n          name=\"EndTime\"\r\n          style ={formValue.Saturday? {backgroundColor:\"#D0F0C0\"}:{}}\r\n          disabled={formValue.Saturday ? false : true}\r\n          value={formValue.SaturdayEndTime}\r\n          onChange={handleEndTimeSaturday}\r\n        />\r\n\r\n        <input\r\n         aria-label=\"sunday-checkbox\"\r\n          className=\" sun-checkbox\"\r\n          type=\"checkbox\"\r\n          id=\"Sunday\"\r\n          onChange={handleChangeCheckBox}\r\n        />\r\n        <label className=\"sun-label\">Sunday</label>\r\n\r\n        <TimePicker\r\n         aria-label=\"sunday-time-picker-start\"\r\n          className=\"sun-start\"\r\n          start=\"0\"\r\n          end=\"24\"\r\n          name=\"StartTime\"\r\n          step={30}\r\n          style ={formValue.Sunday? {backgroundColor:\"#D0F0C0\"}:{}}\r\n          disabled={formValue.Sunday ? false : true}\r\n          value={formValue.SundayStartTime}\r\n          onChange={handleStartTimeSunday}\r\n        />\r\n\r\n        <TimePicker\r\n        aria-label=\"sunday-time-picker-end\"\r\n          className=\"sun-end\"\r\n          start=\"0\"\r\n          end=\"24\"\r\n          step={30}\r\n          name=\"EndTime\"\r\n          style ={formValue.Sunday? {backgroundColor:\"#D0F0C0\"}:{}}\r\n          disabled={formValue.Sunday ? false : true}\r\n          value={formValue.SundayEndTime}\r\n          onChange={handleEndTimeSunday}\r\n        />\r\n\r\n        <input\r\n         aria-label=\"image-picker-hiden\"\r\n          className=\"img-picker\"\r\n          ref={fileInput}\r\n          type=\"file\"\r\n          name=\"file\"\r\n          onChange={handleFile}\r\n          id=\"validationFormik107\"\r\n          feedbackTooltip\r\n         \r\n        />\r\n\r\n        <button \r\n        aria-label=\"image-picker\"\r\n          className = \"img-picker-show\"\r\n          onClick={fileUploadTrigerInput}\r\n        >Upload Iamge</button>\r\n        \r\n\r\n        <img\r\n         aria-label=\"image-display\"\r\n          className=\"picture-upload\"\r\n          src={temImageFileAfterPicked}\r\n         \r\n         \r\n        />\r\n\r\n        <button\r\n         aria-label=\"submit-post-button\"\r\n          type=\"button\"\r\n          className=\"  submit-btn\"\r\n          onClick={createPost}\r\n        >\r\n          CREATE POST\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePost;\r\n","import React from \"react\";\r\nimport\"./css/card.css\"\r\n\r\nfunction CardView(props){\r\n\r\n   return (\r\n      <div className=\"card text-center entireCard\" style = {props.style}>\r\n        <div className=\"overflow\">\r\n          <img\r\n            className=\"cardview-image\"\r\n            src={props.picture}\r\n            alt=\"img1\"\r\n          \r\n            \r\n          />\r\n        </div>\r\n        <div className=\"card-body text-dark\" style={{border:\"1px\", borderRadius: \"40px !important\"}} >\r\n          <h4 className=\"card-title\">{`Fee: ${props.parkingFee}`}</h4>\r\n          <p className =\"card-description2\"></p>\r\n          <p className=\"card-description\">{props.street}</p>\r\n          <button className=\"card-button\" name={props.name} onClick={()=> {props.function(props.post)}} >\r\n            {props.buttonName}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default CardView;","import React, { useState, useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport \"./searchPage.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CardView from \"../components/Card/Card\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as loginToken from \"../components/loginTokenAndSignOff\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\n\r\nfunction SearchPage(props) {\r\n  const history = useHistory();\r\n\r\n  const [posts, setPost] = useState(\"\");\r\n  const [dataStatus, setDataStatus] = useState(false);\r\n  const [sendPostData, setSendPostData] = useState(\"\");\r\n  const [zipinfo, setZipinfo] = useState(\"\");\r\n\r\n  const getInfo = async () => {\r\n    const res = await fetch(\"/get_data\", { method: \"GET\" });\r\n    const data = await res.json();\r\n    setPost(data);\r\n    setDataStatus(true);\r\n  };\r\n\r\n  const searchByZipCode = async () => {\r\n    const res = await fetch(\"/get_data_query\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ zip: zipinfo }),\r\n    });\r\n    const data = await res.json();\r\n   \r\n    setPost(data);\r\n \r\n    /* setDataStatus(true);*/\r\n    return data;\r\n  };\r\n\r\n  const handleZipInputChange = (event) => {\r\n    setZipinfo(event.target.value);\r\n   \r\n  };\r\n\r\n  useEffect(() => {\r\n    getInfo();\r\n  }, []);\r\n\r\n  //check database if the user is in the currently login collection\r\n  useEffect(() => {\r\n    check();\r\n  }, []);\r\n\r\n  const check = async () => {\r\n    const data = localStorage.getItem(\"current-user\");\r\n\r\n    if (data) {\r\n      const result = await loginToken.checkCurrentLogin({ email: data });\r\n    \r\n      if (result.result === false) {\r\n        history.push(\"/signin\");\r\n      }\r\n    } else {\r\n      history.push(\"/signin\");\r\n    }\r\n  };\r\n\r\n  const handleLogOut = async () => {\r\n    const data = localStorage.getItem(\"current-user\");\r\n    await loginToken.deleteLoginToken({ email: data });\r\n    await localStorage.removeItem(\"current-user\");\r\n  };\r\n\r\n  const goToPost = (post) => {\r\n    setSendPostData(post);\r\n    localStorage.setItem(\r\n      \"post-picked\",\r\n      JSON.stringify(post)\r\n    ); /*storing data in Local and retreive in calendard*/\r\n  };\r\n\r\n  if (sendPostData !== \"\") {\r\n    return <Redirect to=\"/make_appointment\" />;\r\n  }\r\n\r\n  const cardViewStyle = {\r\n    margin: \"20px\",\r\n    borderRadius: \"20px \",\r\n    overflow: \"hidden\",\r\n  };\r\n\r\n  /*{posts.map(cardDetail)*/\r\n  return (\r\n    <div className=\"searchpost-page-body\">\r\n      <Navbar\r\n        searchPostActive={{ borderBottom: \"4px solid black\" }}\r\n        logoutFunction={handleLogOut}\r\n      />\r\n\r\n      <div className=\"searchpost-filter-area\">\r\n        <input\r\n          aria-label =\"search-field-zipcode\"\r\n          className=\"searpost-input-zip\"\r\n          type=\"text\"\r\n          placeholder=\"Search By Zip Code\"\r\n          onChange={handleZipInputChange}\r\n        />\r\n\r\n        <button className=\"btn-search\" onClick={searchByZipCode}>\r\n          Seach\r\n        </button>\r\n        <button className=\"btn-reset\" onClick={getInfo}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n\r\n      <Container>\r\n        {dataStatus ? (\r\n          <div className=\"grid \">\r\n            {posts.map((t) => (\r\n              <CardView\r\n                style={cardViewStyle}\r\n                picture={t.picture}\r\n                post={t}\r\n                parkingFee={t.parkingFee}\r\n                street={t.street}\r\n                name={t._id}\r\n                function={goToPost}\r\n                buttonName=\"Make Appointment\"\r\n              />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <h1>Loading</h1>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n","import React from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport moment from \"moment\";\r\nimport \"@fullcalendar/core/main.css\";\r\nimport \"@fullcalendar/daygrid/main.css\";\r\nimport \"@fullcalendar/timegrid/main.css\";\r\n\r\n\r\nconst Calendar = (props) => {\r\n\r\n const busHr  = [];\r\n\r\n\r\n  //todo update businessHr in useState\r\n\r\n  const checkBusinessHr = (driveWayPost) => {\r\n    \r\n    for (let [key, value] of Object.entries(driveWayPost)) {\r\n      if (key === \"Monday\" && value === true) {\r\n        busHr.push({\r\n          daysOfWeek: [1],\r\n          startTime: moment()\r\n            .startOf(\"day\")\r\n            .seconds(driveWayPost.MondayStartTime)\r\n            .format(\"H:mm\"),\r\n          endTime: moment()\r\n            .startOf(\"day\")\r\n            .seconds(driveWayPost.MondayEndTime)\r\n            .format(\"H:mm\"),\r\n        });\r\n      } else if (key === \"Tuesday\" && value === true) {\r\n        busHr.push({\r\n          daysOfWeek: [2],\r\n          startTime: moment()\r\n            .startOf(\"day\")\r\n            .seconds(driveWayPost.TuesdayStartTime)\r\n            .format(\"H:mm\"),\r\n          endTime: moment()\r\n            .startOf(\"day\")\r\n            .seconds(driveWayPost.TuesdayEndTime)\r\n            .format(\"H:mm\"),\r\n        });\r\n      } else if (key === \"Wednesday\" && value === true) {\r\n        busHr.push({\r\n          daysOfWeek: [3],\r\n          startTime: moment()\r\n            .startOf(\"day\")\r\n            .seconds(driveWayPost.WednesdayStartTime)\r\n            .format(\"H:mm\"),\r\n          endTime: moment()\r\n            .startOf(\"day\")\r\n            .seconds(driveWayPost.WednesdayEndTime)\r\n            .format(\"H:mm\"),\r\n        });\r\n      } else if (key === \"Thursday\" && value === true) {\r\n        busHr.push({\r\n          daysOfWeek: [4],\r\n          startTime: moment()\r\n            .startOf(\"day\")\r\n            .seconds(driveWayPost.ThursdayStartTime)\r\n            .format(\"H:mm\"),\r\n          endTime: moment()\r\n            .startOf(\"day\")\r\n            .seconds(driveWayPost.ThursdayEndTime)\r\n            .format(\"H:mm\"),\r\n        });\r\n      } else if (key === \"Friday\" && value === true) {\r\n        busHr.push({\r\n          daysOfWeek: [5],\r\n          startTime: moment()\r\n            .startOf(\"day\")\r\n            .seconds(driveWayPost.FridayStartTime)\r\n            .format(\"H:mm\"),\r\n          endTime: moment()\r\n            .startOf(\"day\")\r\n            .seconds(driveWayPost.FridayEndTime)\r\n            .format(\"H:mm\"),\r\n        });\r\n      } else if (key === \"Saturday\" && value === true) {\r\n        busHr.push({\r\n          daysOfWeek: [6],\r\n          startTime: moment()\r\n            .startOf(\"day\")\r\n            .seconds(driveWayPost.SaturdayStartTime)\r\n            .format(\"H:mm\"),\r\n          endTime: moment()\r\n            .startOf(\"day\")\r\n            .seconds(driveWayPost.SaturdayEndTime)\r\n            .format(\"H:mm\"),\r\n        });\r\n      } else if (key === \"Sunday\" && value === true) {\r\n        busHr.push({\r\n          daysOfWeek: [7],\r\n          startTime: moment()\r\n            .startOf(\"day\")\r\n            .seconds(driveWayPost.SundayStartTime)\r\n            .format(\"H:mm\"),\r\n          endTime: moment()\r\n            .startOf(\"day\")\r\n            .seconds(driveWayPost.SundayEndTime)\r\n            .format(\"H:mm\"),\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  checkBusinessHr(props.selectedPost);\r\n\r\n  const getEvent=()=>{\r\n\r\n    const events=[];\r\n    for(let event of props.appointment){\r\n     events.push( {title:event.renter, start: new Date(event.start), end:new Date(event.end)})\r\n    }\r\n\r\n    return events;\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <FullCalendar\r\n      style ={props.style}\r\n      className=\"\"\r\n      plugins={[dayGridPlugin, timeGridPlugin]}\r\n      initialView=\"timeGridWeek\"\r\n      defaultDate={new Date()}\r\n      selectable={true}\r\n      displayEventTime={false}\r\n      events={getEvent()}\r\n      eventColor=\"#8DA562\"\r\n      defaultView=\"timeGridWeek\"\r\n      header={{\r\n              left: 'prev,next today',\r\n              center: 'title',\r\n              right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek',\r\n            }}\r\n      eventTimeFormat={{\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n        meridiem: false,\r\n      }}\r\n      businessHours={busHr}\r\n      \r\n     \r\n    />\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CardView from \"../components/Card/Card\";\r\nimport Calendar from \"../components/Calendar\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as loginToken from \"../components/loginTokenAndSignOff\";\r\nimport \"./home.css\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\n\r\nfunction Home(props) {\r\n  const history = useHistory();\r\n\r\n  const [userInfo, setUserinfo] = useState(\"\");\r\n  const [userActivePost, setUserActivePost] = useState([]);\r\n  const [dataStatus, setDataStatus] = useState(false);\r\n\r\n  const [selectedPost, setSelectedPost] = useState({});\r\n  const [appointment, setAppointment] = useState([]);\r\n\r\n  // getting the Parkingposts related to the current user\" email \"\r\n  const getInfo = async (query, path) => {\r\n    const res = await fetch(path, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(query),\r\n    });\r\n    const data = await res.json();\r\n    setUserActivePost(data);\r\n    setDataStatus(true);\r\n    return data;\r\n  };\r\n\r\n  const getAppointment = async (query, path) => {\r\n    const res = await fetch(path, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(query),\r\n    });\r\n    const data = await res.json();\r\n    return data;\r\n  };\r\n\r\n  // at initial loading - getting current user login info\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(\"current-user\");\r\n    if (data) {\r\n      setUserinfo(data);\r\n    }\r\n\r\n    getInfo({ email: data }, \"/get_data_query\");\r\n  }, []);\r\n\r\n  //check database if the user is in the currently login collection\r\n  useEffect(() => {\r\n    check();\r\n  }, []);\r\n\r\n  const check = async () => {\r\n    const data = localStorage.getItem(\"current-user\");\r\n    if (data) {\r\n      const result = await loginToken.checkCurrentLogin({ email: data });\r\n\r\n      if (result.result === false) {\r\n        history.push(\"/signin\");\r\n      }\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  const getSelectedPost = (post) => {\r\n    // !!! I need to know which post the user selected. by passing this function as a callback to the active post selection button is my solution\r\n    // while map functions assigns the active posts to each cardview respectively\r\n    // we are passing the respective post as props to the cardview componenet at the same time \"post={t}\"\r\n    // when the user selects the button, it trigers this callback function and use the props.post as its argument\r\n    // so the post parameter in this function is actually the post setected by the user. This way I know what posts was selected.\r\n\r\n    setSelectedPost(post);\r\n    /* getInfo({post._id:}, path)*/\r\n\r\n    getAppointment({ post: post._id }, \"/get_appointment_query\").then(\r\n      (data) => {\r\n        setAppointment(data);\r\n      }\r\n    );\r\n\r\n    // put the appointment in calendar\r\n    /* setSelectedPost(post);*/ // put current selected post to useState\r\n  };\r\n\r\n  const handleLogOut = async () => {\r\n    loginToken.deleteLoginToken({ email: userInfo });\r\n    localStorage.removeItem(\"current-user\");\r\n  };\r\n\r\n  const cardViewStyle = {\r\n    marginBottom: \"40px\",\r\n    borderRadius: \"20px \",\r\n    overflow: \"hidden\",\r\n  };\r\n  const calendarStyle = { width: \"50vw\", height: \"50vh\" };\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        homeActive={{ borderBottom: \"4px solid black\" }}\r\n        logoutFunction={handleLogOut}\r\n      />\r\n\r\n      <div className=\"home-container\" role=\"main\">\r\n        <div className=\"home-active-post-title\" role=\"heading\" aria-level=\"2\">\r\n          <p className=\"home-text-instruction\">View Appointment</p>\r\n        </div>\r\n        {dataStatus ? (\r\n          <div className=\"home-cardview \">\r\n            {userActivePost.map((t) => (\r\n              <CardView\r\n                style={cardViewStyle}\r\n                parkingFee={t.parkingFee}\r\n                post={t}\r\n                street={t.street}\r\n                name={t._id}\r\n                picture={t.picture}\r\n                function={getSelectedPost}\r\n                buttonName={\"Appointments\"}\r\n              />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <h1 className=\"home-cardview \">Loading</h1>\r\n        )}\r\n\r\n        <div className=\"home-calendar\">\r\n          <Calendar\r\n            style={calendarStyle}\r\n            selectedPost={selectedPost}\r\n            appointment={appointment}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport TimePicker from \"react-bootstrap-time-picker\";\r\nimport DayPicker from \"react-day-picker\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport Swal from 'sweetalert2'\r\nimport Calendar from \"../components/Calendar\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as loginToken from \"../components/loginTokenAndSignOff\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport \"./makeAppointment.css\";\r\n\r\nfunction MakeAppointmentTesting() {\r\n  const history = useHistory();\r\n\r\n  const [driveWayPost, setDrivewayPost] = useState({});\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [endTime, setEndTime] = useState(\"\");\r\n  const [datePicked, setDatePicked] = useState(\"\");\r\n  const [existingAppointment, setExistingAppointment] = useState([]);\r\n\r\n  const [userInfo, setUserInfo] = useState();\r\n\r\n  const getAppointment = async (query, path) => {\r\n    const res = await fetch(path, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(query),\r\n    });\r\n    const data = await res.json();\r\n    return data;\r\n  };\r\n\r\n  const handleSchduleBtn = async () => {\r\n    const schedule = {\r\n      owner: driveWayPost.email,\r\n      post: driveWayPost._id,\r\n      renter: userInfo,\r\n      start: new Date(\r\n        moment(datePicked, \"YYYY/MM/DD\").year(),\r\n        moment(datePicked, \"YYYY/MM/DD\").month(),\r\n        moment(datePicked, \"YYYY/MM/DD\").date(),\r\n        Math.floor(startTime / 3600),\r\n        Math.floor((startTime % 3600) / 60),\r\n        0\r\n      ),\r\n      end: new Date(\r\n        moment(datePicked, \"YYYY/MM/DD\").year(),\r\n        moment(datePicked, \"YYYY/MM/DD\").month(),\r\n        moment(datePicked, \"YYYY/MM/DD\").date(),\r\n        Math.floor(endTime / 3600),\r\n        Math.floor((endTime % 3600) / 60),\r\n        0\r\n      ),\r\n    };\r\n\r\n    setExistingAppointment((oldArray) => [...oldArray, schedule]);\r\n  };\r\n\r\n  const confirmSchedule = async () => {\r\n    const lastItem = existingAppointment[existingAppointment.length - 1];\r\n \r\n    const res = await fetch(\"/insert_appointment\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(lastItem),\r\n    });\r\n\r\n      Swal.fire({\r\n                  icon:\"success\",\r\n                  text:\"Your appointment is scheduled\"\r\n                }).then(history.push(history.push(\"/my_appointment\")))\r\n  };\r\n\r\n  //check database if the user is in the currently login collection\r\n  useEffect(() => {\r\n    check();\r\n  }, []);\r\n\r\n  const check = async () => {\r\n    const data = localStorage.getItem(\"current-user\");\r\n\r\n    if (data) {\r\n      const result = await loginToken.checkCurrentLogin({ email: data });\r\n\r\n      if (result.result === false) {\r\n        history.push(\"/signin\");\r\n      }\r\n    } else {\r\n      history.push(\"/signin\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    initialSetup();\r\n  }, []);\r\n\r\n  const initialSetup = async () => {\r\n    const data = localStorage.getItem(\"current-user\");\r\n\r\n    if (data) {\r\n      setUserInfo(data);\r\n    }\r\n\r\n    const postRent = await localStorage.getItem(\"post-picked\");\r\n\r\n    if (postRent) {\r\n      const currentPost = await JSON.parse(postRent);\r\n\r\n      setDrivewayPost(currentPost);\r\n\r\n      const data = await getAppointment(\r\n        { post: currentPost._id },\r\n        \"/get_appointment_query\"\r\n      );\r\n\r\n      await setExistingAppointment(data);\r\n    }\r\n  };\r\n\r\n  const handleLogOut = async () => {\r\n    loginToken.deleteLoginToken({ email: userInfo });\r\n    localStorage.removeItem(\"current-user\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar role=\"navigation\" logoutFunction={handleLogOut} />\r\n     \r\n\r\n      <div className=\"make-appointment-body\">\r\n        <div className=\"make-appointment-date-picker\">\r\n          <DayPicker\r\n            aria-label = \"date-picker\"\r\n            role=\"date picker\"\r\n            selectedDays={datePicked}\r\n            onDayClick={(e) => {\r\n              setDatePicked(e);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <p className=\"time-picker-title-start\">Start Time </p>\r\n        <TimePicker\r\n          role=\"timepicker\"\r\n          aria-label = \"timepicker-start-park-time\"\r\n          className=\"make-appointment-time-picker-start\"\r\n          start=\"0\"\r\n          end=\"24\"\r\n          name=\"StartTime\"\r\n          step={30}\r\n          value={startTime}\r\n          onChange={(e) => {\r\n            setStartTime(e);\r\n          }}\r\n        />\r\n        <p className=\"time-picker-title-end\">End Time </p>\r\n        <TimePicker\r\n        aria-label = \"timepicker-end-park-time\"\r\n          className=\"make-appointment-time-picker-end\"\r\n          start=\"0\"\r\n          end=\"24\"\r\n          name=\"StartTime\"\r\n          step={30}\r\n          value={endTime}\r\n          onChange={(e) => {\r\n            setEndTime(e);\r\n          }}\r\n        />\r\n\r\n        <button className=\"btn-appointment-schedule\" onClick={handleSchduleBtn}>\r\n          Schedule\r\n        </button>\r\n        <button className=\"btn-appointment-confirm\" onClick={confirmSchedule}>\r\n          Confirm\r\n        </button>\r\n        <div className=\"make-appointment-calendar\">\r\n          <Calendar\r\n            selectedPost={driveWayPost}\r\n            appointment={existingAppointment}\r\n            selectedDate={datePicked}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MakeAppointmentTesting;\r\n","import React, { useState } from \"react\";\r\nimport \"./css/sign_up.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport * as loginToken from \"../components/loginTokenAndSignOff\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport logo from \"../components/Navbar/image/logo.png\";\r\n\r\nfunction SignUp() {\r\n  const history = useHistory();\r\n  const [signUpInfo, setSignUpInfo] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n  });\r\n\r\n  //updating input value\r\n  const handleSignUpInput = (event) => {\r\n    const str = event.target.value;\r\n    setSignUpInfo({\r\n      ...signUpInfo,\r\n      [event.target.name]: str.toLowerCase(),\r\n    });\r\n  };\r\n\r\n  // check if user is already in db ,\r\n  //if no then insert signupinfo to the database ,\r\n  //if yes, inform user\r\n  const checkUserInDb = async () => {\r\n    const data = await fetch(\"/if_user_exist\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email: signUpInfo.email.toLowerCase() }),\r\n    });\r\n\r\n    const str = await data.json();\r\n\r\n    // str.result == false user dont exit in database else .. exist\r\n    if (str.result === false) {\r\n      createUserInTheDataBase();\r\n      await loginToken.getLogin({ email: signUpInfo.email.toLowerCase() });\r\n\r\n      localStorage.setItem(\"current-user\", signUpInfo.email);\r\n      history.push(\"/home\");\r\n    } else {\r\n      swal(\"You already have an account, please sign in\", { button: false });\r\n    }\r\n  };\r\n\r\n  // create user in the database\r\n  const createUserInTheDataBase = async () => {\r\n    await fetch(\"/insert_user\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(signUpInfo),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"SignUp\">\r\n        <div className=\"signin-logo-name\">\r\n          <img src={logo} alt=\"logo\" className=\"logo-img\" />\r\n        </div>\r\n        <div className=\"container-fluid d-flex justify-content-center\">\r\n          <div className=\"signcard-signup\">\r\n            <div className=\"card-header\">\r\n              <h3>Sign Up</h3>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <label for=\"name\">Username</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    className=\"form-control\"\r\n                    placeholder=\" \"\r\n                    onChange={handleSignUpInput}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label for=\"email\">Email</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\" \"\r\n                    onChange={handleSignUpInput}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label for=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"\"\r\n                    onChange={handleSignUpInput}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    className=\"btn btn-dark btn-sm\"\r\n                    style={{\r\n                      marginTop: \"10px\",\r\n                      width: \"100px\",\r\n                      padding: \"8px\",\r\n                    }}\r\n                    value=\"Sign Up\"\r\n                    onClick={checkUserInDb}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  Already an user?{\" \"}\r\n                  <Link className=\"card-footerText\" to=\"/signin\">\r\n                    Sign In\r\n                  </Link>\r\n                  <br />\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useState } from \"react\";\r\nimport \"./css/sign_in.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport * as loginToken from \"../components/loginTokenAndSignOff\";\r\nimport logo from \"../components/Navbar/image/logo.png\";\r\n\r\nfunction SignIn() {\r\n  const history = useHistory();\r\n  const [signInInfo, setSignInInfo] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleSignIn = async () => {\r\n   \r\n\r\n    const isauthenticated = await loginToken.checkIfUserPasswordMatches(\r\n      signInInfo\r\n    );\r\n  \r\n\r\n\r\n    if (isauthenticated.result === true) {\r\n      localStorage.setItem(\"current-user\", signInInfo.email);\r\n      history.push(\"/home\");\r\n    } else {\r\n      swal(\"You login doesn't work, please try again\", { button: false });\r\n    }\r\n  };\r\n\r\n  const handleSignInInput = (event) => {\r\n    const str = event.target.value;\r\n\r\n    setSignInInfo({\r\n      ...signInInfo,\r\n      [event.target.name]: str.toLowerCase(),\r\n    });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"SignIn\">\r\n        <div className=\"signin-logo-name\">\r\n          <img src={logo} alt=\"logo\" className=\"logo-img\" />\r\n        </div>\r\n        \r\n        <div className=\"container-fluid d-flex justify-content-center\">\r\n          <div className=\"signcard\">\r\n            <div className=\"card-header\">\r\n              <h3>Sign In</h3>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <label for=\"inputEmail\">Email</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\" \"\r\n                    name=\"email\"\r\n                    onChange={handleSignInInput}\r\n                  />\r\n                </div>\r\n                <div className=\"form group\">\r\n                  <label for=\"inputPassword\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\" \"\r\n                    name=\"password\"\r\n                    onChange={handleSignInInput}\r\n                  />\r\n                </div>\r\n                <br />\r\n\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    className=\"btn btn-dark\"\r\n                    style={{\r\n                      marginTop: \"10px\",\r\n                      width: \"100px\",\r\n                      padding: \"8px\",\r\n                    }}\r\n                    value=\"Sign In\"\r\n                    onClick={handleSignIn}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <div>\r\n                <Link className=\"card-footerText\" to=\"/signUp\">\r\n                  Sign up here\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport \"./css/CardFormyAppointment.css\"\r\n\r\n\r\nfunction myAppointmentCardView(props){\r\n\r\n   return (\r\n      <div className=\"entireCard-appointment\" >\r\n     \r\n          <img\r\n            className=\"cardview-image-appointment\"\r\n            src={props.picture}\r\n            alt=\"img1\"\r\n          />\r\n       \r\n       \r\n          <p className=\"appointment-address\">{`Street:  ${props.street}, ${props.city}, ${props.state}, ${props.zip}`}</p>\r\n          <p className=\"start-time-appointment\">{`Start Time: ${new Date (props.start).toLocaleString(\"en-US\")}`}</p>\r\n          <p className =\"end-time-appointment\">{`End Time: ${new Date (props.end).toLocaleString(\"en-US\")}`}</p>\r\n        \r\n      </div>\r\n    );\r\n}\r\n\r\nexport default myAppointmentCardView;","import React, { useState, useEffect } from \"react\";\r\nimport * as loginToken from \"../components/loginTokenAndSignOff\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport CardView from \"../components/Card/CardForAppointment\";\r\nimport \"./myAppointment.css\"\r\n\r\nfunction MyAppointment() {\r\n  const history = useHistory();\r\n\r\n  const [userInfo, setUserinfo] = useState(\"\");\r\n  const [myAppointment, setmyAppointment] = useState([]);\r\n  const [dataStatus, setDataStatus] = useState(false);\r\n\r\n  const getPost = async (query, path) => {\r\n    const res = await fetch(path, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(query),\r\n    });\r\n\r\n    const data = await res.json();\r\n    return data;\r\n  };\r\n\r\n  const getMyAppointment = async (query, path) => {\r\n    const res = await fetch(path, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(query),\r\n    });\r\n    const data = await res.json();\r\n\r\n    const posts = await getPost({}, \"/get_data_query\");\r\n\r\n    const arr = [];\r\n    Promise.all([data, posts]).then((result) => {\r\n      for (const appointment of result[0]) {\r\n        for (const post of result[1]) {\r\n          if (appointment.post === post._id) {\r\n            let currentAppointment = {\r\n              street: post.street,\r\n              city: post.city,\r\n              state: post.state,\r\n              zip: post.zip,\r\n              img: post.picture,\r\n              start: appointment.start,\r\n              end: appointment.end,\r\n            };\r\n\r\n            arr.push(currentAppointment);\r\n          }\r\n        }\r\n      }\r\n\r\n      console.log(result[0]);\r\n      console.log(result[1]);\r\n      console.log(arr);\r\n\r\n      setmyAppointment(arr);\r\n    });\r\n\r\n    return data;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(\"current-user\");\r\n    if (data) {\r\n      setUserinfo(data);\r\n    }\r\n\r\n    getMyAppointment({ renter: data }, \"/get_appointment_query\");\r\n  }, []);\r\n\r\n  //check database if the user is in the currently login collection\r\n  useEffect(() => {\r\n    check();\r\n  }, []);\r\n\r\n  const check = async () => {\r\n    const data = localStorage.getItem(\"current-user\");\r\n    if (data) {\r\n      const result = await loginToken.checkCurrentLogin({ email: data });\r\n\r\n      if (result.result === false) {\r\n        history.push(\"/signin\");\r\n      }\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  const handleLogOut = async () => {\r\n    loginToken.deleteLoginToken({ email: userInfo });\r\n    localStorage.removeItem(\"current-user\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar role=\"navigation\" logoutFunction={handleLogOut} MyAppointment={{ borderBottom: \"4px solid black\" }} />\r\n      <main role=\"main\">\r\n      <h4  className=\"appointment-title\">You Active Appointment</h4></main>\r\n      <div role=\"contentinfo\" className =\"container my-appointment-body\">\r\n     \r\n      {myAppointment.map((data) => {\r\n       return(\r\n        <CardView\r\n          ClassName = \"cardView-appointment\"\r\n          picture={data.img}\r\n          street={data.street}\r\n          city={data.city}\r\n          state={data.state}\r\n          zip={data.zip}\r\n          start={data.start}\r\n          end={data.end}\r\n        />\r\n)\r\n      })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyAppointment;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CreatePost from \"./createPostPage/CreatePost.js\";\r\nimport SearchPage from \"./searchPage/SearchPage.js\";\r\nimport Home from \"./homePage/Home.js\";\r\nimport MakeAppointment from \"./makeAppointmentPage/MakeAppointment.js\";\r\nimport { Navbar, Nav, Button } from \"react-bootstrap\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  NavLink,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n/*import UserContext from \"./components/UserContext\";*/\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport SignUp from \"./loginAndLogOutPage/SignUp\";\r\nimport SignIn from \"./loginAndLogOutPage/Login\";\r\nimport MyAppointment from \"./AppointmentPage/MyAppointment\";\r\n\r\nfunction App() {\r\n  let history = useHistory();\r\n\r\n  const [userInfo, setUserInfo] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(\"current-user\");\r\n    if (data) {\r\n      setUserInfo(data);\r\n    }\r\n  }, []);\r\n\r\n \r\n  let p = new Promise((resolve, reject) => {});\r\n\r\n  return (\r\n    <Router>\r\n  \r\n      <Switch>\r\n        <Route path=\"/signUp\" component={SignUp} />\r\n        <Route path=\"/signin\" component={SignIn} />\r\n\r\n        <Route path=\"/searchpage\" component={SearchPage} />\r\n        <Route path=\"/createpost\" component={CreatePost} />\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/make_appointment\" component={MakeAppointment} />\r\n        <Route path=\"/my_appointment\" component={MyAppointment} />\r\n\r\n        <Route path=\"/\" component={SignIn} />\r\n        <Route path=\"/App\" component={App} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}